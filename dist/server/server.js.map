{"version":3,"sources":["../src/server/server.ts"],"names":[],"mappings":";AAAA,+BAAiC;AACjC,iCAAmC;AACnC,oCAAsC;AACtC,2BAA6B;AAC7B,2BAA6B;AAE7B,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACpC,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAE1B,IAAI,KAAK,GAAG,EAAE,CAAC;AACf,IAAI,cAAc,GAAG,EAAE,CAAC;AAExB,iBAAiB;AACjB,GAAG,CAAC,GAAG,CAAC,oCAAoC,EAC3C,UAAC,GAAoB,EAAE,GAAqB;IAC5C,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG;IAClB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,UAAS,MAAM;IACnC,IAAI,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC;IAChB,IAAI,QAAQ,GAAG,OAAO,CAAC;IACvB,cAAc,CAAC,OAAO,CAAC,UAAS,IAAI;QAChC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,UAAS,GAAG;QAClC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,cAAc,CAAC,IAAI,CAAC;YAChB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,GAAG;SACf,CAAC,CAAC;QACH,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE;QACpB,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,GAAG,mBAAmB,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,QAAQ;QAChC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,QAAQ,GAAG,QAAQ,CAAC;QACpB,KAAK,CAAC,IAAI,CAAC;YACP,EAAE,EAAE,GAAG;YACP,IAAI,EAAE,QAAQ;SACjB,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,GAAG,gBAAgB,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,kBAAkB,GAAG;IACjB,GAAG,CAAC,CAAc,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;QAAlB,IAAI,KAAK,cAAA;QACV,EAAE,CAAC,CAAC,GAAG,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;QACtB,CAAC;KACJ;AACL,CAAC;AAED,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;IAChB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC","file":"server.js","sourcesContent":["import * as config from 'config';\r\nimport * as express from 'express';\r\nimport * as socketIO from 'socket.io';\r\nimport * as http from 'http';\r\nimport * as path from 'path';\r\n\r\nlet port = config.get('port');\r\nlet app = express();\r\nlet server = http.createServer(app);\r\nlet io = socketIO(server);\r\n\r\nlet Users = [];\r\nlet messageHistory = [];\r\n\r\n// static content\r\napp.get('/app|res|styles|scripts|server|lib',\r\n (req: express.Request, res: express.Response) => {\r\n res.sendFile(req.path, { root: 'dist' });\r\n});\r\n\r\napp.get('/', (req, res) => {\r\n    res.sendFile(path.join(__dirname, '/../index.html'));\r\n});\r\n\r\nio.on('connection', function(socket){\r\nvar sid = socket.id;\r\n    var username = 'Anoop';\r\n    messageHistory.forEach(function(post){\r\n        socket.emit('chat message', post.name, post.message);\r\n    });\r\n\r\n    socket.on('chat message', function(msg){\r\n        console.log(msg);\r\n        messageHistory.push({\r\n            name: username,\r\n            message: msg\r\n        });\r\n        io.emit('chat message', username, msg);\r\n        console.log(username + msg);\r\n    });\r\n\r\n    socket.on('disconnect', function(){\r\n        io.emit('alert', username + ' has disconnected');\r\n    });\r\n\r\n    socket.on('login', function(nickName){\r\n        console.log('login detected');\r\n        username = nickName;\r\n        Users.push({\r\n            id: sid,\r\n            name: nickName\r\n        });\r\n        socket.broadcast.emit('alert', username + ' has connected');\r\n    });\r\n});\r\n\r\nfunction findName(sid) {\r\n    for (let entry of Users) {\r\n        if (sid === entry.id) {\r\n            return entry.name;\r\n        }\r\n    }\r\n}\r\n\r\nserver.listen(3000, function(){\r\n    console.log('listening on *:3000');\r\n}); "]}