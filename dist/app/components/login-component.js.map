{"version":3,"sources":["../src/app/components/login-component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA0C;AAC1C,6DAA2D;AAC3D,yDAAuD;AACvD,0CAAyC;AACzC,yCAAmD;AAUnD,IAAa,cAAc;IAKvB,wBAAoB,aAA4B,EACpC,OAAe,EACf,YAAyB;QAFjB,kBAAa,GAAb,aAAa,CAAe;QACpC,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QANrC,kBAAa,GAAG,kBAAkB,CAAC;QAEnC,eAAU,GAAY,KAAK,CAAC;IAIa,CAAC;IAAA,CAAC;IAE3C,iCAAQ,GAAR;QACI,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACrE,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACpC,CAAC;IACL,CAAC;IAED,gCAAO,GAAP,UAAQ,CAAS;QAAjB,iBAeC;QAdG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;aACtD,SAAS,CAAC,UAAA,IAAI;YACX,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,wBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACvF,YAAY,CAAC,OAAO,CAAC,KAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;gBAC7C,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3B,CAAC;QACL,CAAC,EACD,UAAA,GAAG;YACC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mCAAU,GAAV,UAAW,CAAS;QAChB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAGL,qBAAC;AAAD,CAtCA,AAsCC,IAAA;AAtCY,cAAc;IAP1B,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,iBAAiB;QAC3B,WAAW,EAAE,mCAAmC;QAChD,SAAS,EAAE,CAAC,wBAAwB,CAAC;KACxC,CAAC;qCAOqC,8BAAa;QAC3B,eAAM;QACD,0BAAW;GAP5B,cAAc,CAsC1B;AAtCY,wCAAc","file":"login-component.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { SocketService } from '../services/socket-service';\r\nimport { AuthService } from '../services/auth-service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginCredentials } from '../models/login';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'login-component',\r\n    templateUrl: '../templates/login-component.html',\r\n    styleUrls: ['../../styles/login.css']\r\n})\r\n\r\nexport class LoginComponent {\r\n    storedUserKey = 'rememberUsername';\r\n    form: NgForm;\r\n    loginError: boolean = false;\r\n\r\n    constructor(private socketService: SocketService,\r\n        private _router: Router,\r\n        private _authService: AuthService) { };\r\n\r\n    ngOnInit(): void {\r\n        let authUser = JSON.parse(localStorage.getItem('authenticatedUser'));\r\n        if (authUser && Date.now() < authUser.expiresAt) {\r\n            this._router.navigate(['home']);\r\n        }\r\n    }\r\n\r\n    onLogin(f: NgForm) {\r\n        this._authService.logIn(f.value.username, f.value.password)\r\n            .subscribe(flag => {\r\n                if (flag) {\r\n                    this.socketService.sendLogin(new LoginCredentials(f.value.username, f.value.password));\r\n                    localStorage.setItem(this.storedUserKey, '');\r\n                    this._router.navigate(['home']);\r\n                    this.loginError = false;\r\n                } else {\r\n                    this.loginError = true;\r\n                }\r\n            },\r\n            err => {\r\n                this.loginError = true;\r\n            });\r\n    }\r\n\r\n    onRegister(f: NgForm) {\r\n        console.log(f.value);\r\n    }\r\n\r\n\r\n}\r\n"]}