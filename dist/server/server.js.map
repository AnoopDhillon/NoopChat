{"version":3,"sources":["../src/server/server.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import * as config from 'config';\r\nimport * as express from 'express';\r\nimport * as socketIO from 'socket.io';\r\nimport * as http from 'http';\r\nimport * as bodyParser from 'body-parser';\r\nimport * as path from 'path';\r\nimport * as loginModel from '../app/models/login';\r\nimport * as jwt from 'jsonwebtoken';\r\n\r\n\r\nlet port = config.get('port');\r\nlet app = express();\r\nlet apiRouter = express.Router();\r\nlet server = http.createServer(app);\r\nlet io = socketIO(server);\r\n\r\nlet userList = [\r\n    {\r\n        'username': 'Anoop',\r\n        'password': 'aa'\r\n    },\r\n    {\r\n        'username': 'Me',\r\n        'password': 'me'\r\n    }\r\n];\r\n\r\nlet activeUsers = [];\r\nlet messageHistory = [];\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n// app.use('/api', apiRouter);\r\n\r\n//Middleware\r\napiRouter.use((request, response, next) => {\r\n    let token = request.body.token || request.query.token || request.headers['x-access-token'];\r\n    if (token) {\r\n        jwt.verify(token, 'secret', (err, decoded) => {\r\n            if (err) {\r\n                response.status(403).send({ status: '403' });\r\n            } else {\r\n                if (findName(request.body.username, request.body.password)) {\r\n                    next();\r\n                } else {\r\n                    response.status(401).json({ status: '401' });\r\n                    response.end();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        return response.status(403).send({ status: '403' });\r\n    }\r\n});\r\n\r\n// static content\r\napp.get('/app|res|styles|scripts|server|lib',\r\n    (req: express.Request, res: express.Response) => {\r\n        res.sendFile(req.path, { root: 'dist' });\r\n    });\r\n\r\napp.post('/login', (req: any, res: any) => {\r\n    if (findName(req.body.username, req.body.password)) {\r\n        let token = jwt.sign({ username: req.body.username }, 'secret', { expiresIn: 60 * 60 });\r\n        res.json({ 'status': 200, 'token': token, 'expiresAt': Date.now() + (60 * 60 * 1000) });\r\n    } else {\r\n        res.status(403).send({ status: '403' });\r\n    }\r\n});\r\n\r\napp.get('/*', (req, res) => {\r\n    res.sendFile(path.join(__dirname, '/../index.html'));\r\n});\r\n\r\nio.on('connection', function (socket) {\r\n    let sid = socket.id;\r\n    let username;\r\n\r\n    messageHistory.forEach(function (post) {\r\n        socket.emit('chat message', post.name, post.message);\r\n    });\r\n\r\n    socket.on('chat message', function (msg) {\r\n        messageHistory.push({\r\n            name: username,\r\n            message: msg\r\n        });\r\n        io.emit('chat message', username, msg);\r\n    });\r\n\r\n    socket.on('disconnect', function () {\r\n        io.emit('alert', username + ' has disconnected');\r\n    });\r\n\r\n    socket.on('login', function (data) {\r\n        username = data.username;\r\n        activeUsers.push({\r\n            id: sid,\r\n            name: data.username,\r\n            password: data.password\r\n        });\r\n        socket.broadcast.emit('alert', username + ' has connected');\r\n    });\r\n});\r\n\r\nfunction findName(uname, pword) {\r\n    for (let entry of userList) {\r\n        if (uname === entry.username && pword === entry.password) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nserver.listen(3000, function () {\r\n    console.log('listening on *:3000');\r\n}); "]}